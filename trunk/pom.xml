<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>catering</groupId>
	<artifactId>catering</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>catering</name>

	<properties>
                <database.driver.groupId>org.apache.derby</database.driver.groupId>
                <database.driver.artifactId>derbyclient</database.driver.artifactId>
                <database.driver.version>10.10.1.1</database.driver.version>

                <database.datasource.class>org.apache.derby.jdbc.ClientDataSource</database.datasource.class>
                <database.driver.class>org.apache.derby.jdbc.ClientDriver</database.driver.class>
                <database.url>jdbc:derby://localhost:1527/${database.username};create=true</database.url>
                <database.admin.username></database.admin.username>
                <database.admin.password></database.admin.password>
                <database.username>CATERING</database.username>
                <database.password>catering</database.password>

                <database.delimiter>;</database.delimiter>
                <database.sqlCreate/>
                <database.sqlCreate.skip>true</database.sqlCreate.skip>
                <database.sqlDrop/>
                <database.sqlDrop.skip>true</database.sqlDrop.skip>
                <database.createschema.file>${project.basedir}/src/main/resources/sql/derby/create-schema-derby.sql</database.createschema.file>
                <database.createschema.skip>false</database.createschema.skip>
                <database.loaddata.file>${project.basedir}/src/main/resources/sql/derby/populate-schema-derby.sql</database.loaddata.file>
                <database.loaddata.skip>false</database.loaddata.skip>

		<endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<eclipselink.version>2.5.1</eclipselink.version>
		<eclipse.jpa.modelgen.version>2.5.1</eclipse.jpa.modelgen.version>
		<javaee.api.version>7.0</javaee.api.version>
		<java.source.version>1.7</java.source.version>
		<java.target.version>1.7</java.target.version>
		<maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
		<maven.dependency.plugin.version>2.6</maven.dependency.plugin.version>
		<maven.exec.plugin.version>1.2.1</maven.exec.plugin.version>
		<maven.war.plugin.version>2.3</maven.war.plugin.version>
		<primefaces.version>4.0</primefaces.version>
	</properties>

	<profiles>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<glassfish.home.prefix>c:/</glassfish.home.prefix>
				<glassfish.executables.suffix>.bat</glassfish.executables.suffix>
			</properties>
		</profile>
		<profile>
			<id>unix</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<glassfish.home.prefix>${user.home}</glassfish.home.prefix>
				<glassfish.executables.suffix />
			</properties>
		</profile>
		<profile>
			<id>sdk</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<glassfish.home>${basedir}/../../../</glassfish.home>
			</properties>
		</profile>
		<profile>
			<id>development</id>
			<activation>
				<file>
					<exists>${basedir}/../bundle</exists>
				</file>
			</activation>
			<properties>
				<glassfish.home>${glassfish.home.prefix}/glassfish4</glassfish.home>
			</properties>
		</profile>
		<profile>
			<id>standalone</id>
			<properties>
				<glassfish.home>${basedir}/target/cargo/installs/glassfish</glassfish.home>
				<cargo.maven.containerUrl>http://dlc.sun.com.edgesuite.net/glassfish/4.0/promoted/latest-glassfish.zip</cargo.maven.containerUrl>
			</properties>
		</profile>
		<profile>
			<id>oracle</id>
			<properties>
				<database.driver.groupId>com.oracle</database.driver.groupId>
				<database.driver.artifactId>ojdbc6</database.driver.artifactId>
				<database.driver.version>11.2.0.2.0</database.driver.version>

				<database.datasource.class>oracle.jdbc.pool.OracleDataSource</database.datasource.class>
				<database.driver.class>oracle.jdbc.OracleDriver</database.driver.class>
				<database.url>jdbc:oracle:thin:@//localhost:1521/ORACLE</database.url>
				<database.admin.username>system</database.admin.username>
				<database.admin.password>manager</database.admin.password>
				<database.username>CATERING</database.username>
				<database.password>catering</database.password>
				<database.temptablespace>TEMP</database.temptablespace>
				<database.usertablespace>USERS</database.usertablespace>

				<database.delimiter>;</database.delimiter>
				<database.sqlCreate>
		            <![CDATA[
		                create user ${database.username} identified by "${database.password}" default tablespace
		                "${database.usertablespace}" temporary tablespace "${database.temptablespace}" profile "DEFAULT";
		                grant connect to ${database.username};
		                grant resource to ${database.username};
		                grant create view to ${database.username};
		            ]]>
				</database.sqlCreate>
				<database.sqlCreate.skip>false</database.sqlCreate.skip>
				<database.sqlDrop>
		            <![CDATA[
		                drop user ${database.username} cascade;
		            ]]>
				</database.sqlDrop>
				<database.sqlDrop.skip>false</database.sqlDrop.skip>
				<database.createschema.file>${project.basedir}/src/main/resources/sql/oracle/create-schema-oracle.sql</database.createschema.file>
				<database.createschema.skip>false</database.createschema.skip>
				<database.loaddata.file>${project.basedir}/src/main/resources/sql/oracle/populate-schema-oracle.sql</database.loaddata.file>
				<database.loaddata.skip>false</database.loaddata.skip>
			</properties>
		</profile>
        <profile>
            <id>derby</id>
            <properties>
                <database.driver.groupId>org.apache.derby</database.driver.groupId>
                <database.driver.artifactId>derbyclient</database.driver.artifactId>
                <database.driver.version>10.10.1.1</database.driver.version>

                <database.datasource.class>org.apache.derby.jdbc.ClientDataSource</database.datasource.class>
                <database.driver.class>org.apache.derby.jdbc.ClientDriver</database.driver.class>
                <database.url>jdbc:derby://localhost:1527/${database.username};start=true;create=true</database.url>
                <database.admin.username></database.admin.username>
                <database.admin.password></database.admin.password>
                <database.username>CATERING</database.username>
                <database.password>catering</database.password>

                <database.delimiter>;</database.delimiter>
                <database.sqlCreate/>
                <database.sqlCreate.skip>true</database.sqlCreate.skip>
                <database.sqlDrop/>
                <database.sqlDrop.skip>true</database.sqlDrop.skip>
                <database.createschema.file>${project.basedir}/src/main/resources/sql/derby/create-schema-derby.sql</database.createschema.file>
                <database.createschema.skip>false</database.createschema.skip>
                <database.loaddata.file>${project.basedir}/src/main/resources/sql/derby/populate-schema-derby.sql</database.loaddata.file>
                <database.loaddata.skip>false</database.loaddata.skip>
            </properties>
        </profile>
		<profile>
			<id>db-setup</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
						<dependencies>
							<dependency>
								<!-- Adds the correct JDBC driver as a dependency of this plugin -->
								<groupId>${database.driver.groupId}</groupId>
								<artifactId>${database.driver.artifactId}</artifactId>
								<version>${database.driver.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<!-- common configuration shared by all executions -->
							<driver>${database.driver.class}</driver>
							<username>${database.username}</username>
							<password>${database.password}</password>
							<url>${database.url}</url>
							<delimiter>${database.delimiter}</delimiter>
							<autocommit>true</autocommit>
							<onError>abort</onError>
						</configuration>
						<executions>
							<execution>
								<id>drop-db-if-any</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<skip>${database.sqlDrop.skip}</skip>
									<username>${database.admin.username}</username>
									<password>${database.admin.password}</password>
									<sqlCommand>${database.sqlDrop}</sqlCommand>
									<onError>continue</onError>
								</configuration>
							</execution>
							<execution>
								<id>create-db</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<skip>${database.sqlCreate.skip}</skip>
									<username>${database.admin.username}</username>
									<password>${database.admin.password}</password>
									<sqlCommand>${database.sqlCreate}</sqlCommand>
								</configuration>
							</execution>
							<execution>
								<id>create-schema</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<skip>${database.createschema.skip}</skip>
									<srcFiles>
										<srcFile>${database.createschema.file}</srcFile>
									</srcFiles>
								</configuration>
							</execution>
							<execution>
								<id>load-data</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<skip>${database.loaddata.skip}</skip>
									<srcFiles>
										<srcFile>${database.loaddata.file}</srcFile>
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>GlassFish-setup</id>
			<properties>
				<glassfish.home>${glassfish.home.prefix}/glassfish4</glassfish.home>
				<glassfish.domain>domain1</glassfish.domain>
				<glassfish.connectionpool>cateringPool</glassfish.connectionpool>
				<glassfish.jdbc.resource>jdbc/catering</glassfish.jdbc.resource>
				<glassfish.realm>cateringRealm</glassfish.realm>

				<glassfish.datasource.class>${database.datasource.class}</glassfish.datasource.class>
				<glassfish.database.url>${database.url}</glassfish.database.url>
				<glassfish.database.username>${database.username}</glassfish.database.username>
				<glassfish.database.password>${database.password}</glassfish.database.password>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${maven.exec.plugin.version}</version>
						<configuration>
							<executable>${glassfish.home}/bin/asadmin${glassfish.executables.suffix}</executable>
							<successCodes>
								<successCode>0</successCode>
								<successCode>1</successCode>
							</successCodes>
						</configuration>
						<executions>
							<execution>
								<id>start-server</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>start-domain</argument>
										<argument>${glassfish.domain}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>delete-realm</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>delete-auth-realm</argument>
										<argument>${glassfish.realm}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>delete-jdbc-resource</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>delete-jdbc-resource</argument>
										<argument>${glassfish.jdbc.resource}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>delete-connection-pool</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>delete-jdbc-connection-pool</argument>
										<argument>${glassfish.connectionpool}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>create-connection-pool</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>create-jdbc-connection-pool</argument>
										<argument>--datasourceclassname</argument>
										<argument>${glassfish.datasource.class}</argument>
										<argument>--restype</argument>
										<argument>javax.sql.DataSource</argument>
										<argument>--validationmethod</argument>
										<argument>table</argument>
										<argument>--validationtable</argument>
										<argument>sys.systables</argument>
										<argument>--failconnection</argument>
										<argument>true</argument>
										<argument>--validateatmostonceperiod</argument>
										<argument>10</argument>
										<argument>--property</argument>
										<argument>user=${glassfish.database.username}:password=${glassfish.database.password}:url='${glassfish.database.url}'</argument>
										<argument>${glassfish.connectionpool}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>create-jdbc-resource</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>create-jdbc-resource</argument>
										<argument>--connectionpoolid</argument>
										<argument>${glassfish.connectionpool}</argument>
										<argument>${glassfish.jdbc.resource}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>create-realm</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>create-auth-realm</argument>
										<argument>--classname</argument>
										<argument>com.sun.enterprise.security.ee.auth.realm.jdbc.JDBCRealm</argument>
										<argument>--property</argument>
										<argument>jaas-context=jdbcRealm:datasource-jndi='${glassfish.jdbc.resource}':user-table=USERS:user-name-column=NAME:password-column=PASSWORD:group-table=W_USER_GROUPS:group-table-user-name-column=USER_NAME:group-name-column=GROUP_NAME:digestrealm-password-enc-algorithm=SHA-256:digest-algorithm=SHA-256</argument>
										<argument>${glassfish.realm}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>stop-server</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>stop-domain</argument>
										<argument>${glassfish.domain}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>${eclipselink.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
			<version>${eclipse.jpa.modelgen.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>${javaee.api.version}</version>
			<scope>provided</scope>
		</dependency>

		<!--Primefaces -->
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>${primefaces.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt</artifactId>
			<version>1.9.2</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<source>${java.source.version}</source>
						<target>${java.target.version}</target>
						<compilerArguments>
							<endorseddirs>${endorsed.dir}</endorseddirs>
						</compilerArguments>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.plugin.version}</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
